module RoboCompMSKBody
{

	struct Vector4
	{
	   float W;
	   float X;
	   float Y;
	   float Z; 
	};

	struct Matrix4
    {
       float M11;
       float M12;
       float M13;
       float M14;
       float M21; 
       float M22;
       float M23; 
       float M24; 
       float M31; 
       float M32; 
       float M33; 
       float M34;
       float M41; 
       float M42; 
       float M43;
       float M44;
	
	};

	struct BoneRotation
    {
       Matrix4 Matrix;
       Vector4 Quaternion;
    };

	enum JointType
    {
        HipCenter,
        Spine,
        ShoulderCenter ,
        Head ,
        ShoulderLeft ,
        ElbowLeft,
        WristLeft ,
        HandLeft ,
        ShoulderRight,
        ElbowRight,
        WristRight ,
        HandRight ,
        HipLeft ,
        KneeLeft,
        AnkleLeft ,
        FootLeft,
        HipRight ,
        KneeRight ,
        AnkleRight ,
        FootRight 
    };

	struct BoneOrientation
    {
        BoneRotation AbsoluteRotation;
        JointType EndJoint;
        BoneRotation HierarchicalRotation;
        JointType StartJoint;
    };

	sequence <BoneOrientation> BoneOrientations;

	enum FrameEdges{None, Right , Left , Top ,  Bottom };

	enum stateType{NoTracking, PositionOnly, Tracking};
	enum JointTrackingState {NotTracked,Inferred, Tracked};

	struct SkeletonPoint
	{
		float X;
		float Y;
		float Z;
	};

	struct DepthImagePoint
	{
		int X;
		int Y;
		//distance in milimetres
		int Depth;
	};

	struct ColorImagePoint
	{
		int X;
		int Y;
	};

	struct Joint
	{
		JointTrackingState state;
		SkeletonPoint Position;
	};

	dictionary<JointType, Joint> JointList;

	struct TPerson
	{
        JointList joints;
		stateType state;
		int TrackingId;
        SkeletonPoint Position;
       	BoneOrientations boneOrien;
        FrameEdges ClippedEdges; 
    };
	
	dictionary<int,TPerson> PersonList;

	sequence <byte> TImg;  
	sequence <short> TDepth;

	interface MSKBody
	{
			//basic		
		void getUserList( out PersonList personListIn);
		void getRTMatrixList(int id, out JointList jointListIn );
		stateType getUserState(int id);
		int getNumUsers();
		void getPerson(int TrackingId, out TPerson person);
		

			//useful
		void  getJointPixelPosition(int id, JointType  nameJoint, out ColorImagePoint point);
		
		//Mapping functions
		void  colorImagePointToSkeletonPoint(ColorImagePoint point,  out SkeletonPoint point3D);
		void  colorImagePointToDepthImagePoint (ColorImagePoint point, out DepthImagePoint depthPoint);
		void  skeletonPointToColorImagePoint(SkeletonPoint point3D, out ColorImagePoint point);
		void  skeletonPointToDepthImagePoint (SkeletonPoint point3D, out DepthImagePoint depthPoint);
		void  depthImagePointToSkeletonPoint(DepthImagePoint depthPoint, out SkeletonPoint point3D);
		void  depthImagePointToColorImagePoint(DepthImagePoint depthPoint, out ColorImagePoint point);
		


		//void  getRGB(out TRGB imgRGB); //?? un pixel?
		void  getDepth(out TDepth imgDepth);
	//	void  getRGBD(out TRGBD imgRGBD); // ???
    };

	

	interface MSKBodyEvent
	{
		void newMSKBodyEvent(PersonList people, long timestamp);
    };
    
    
};